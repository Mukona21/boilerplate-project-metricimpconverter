/*
*
*
*
*
*
*
*
*
*
*
*
*       DO NOT EDIT THIS FILE
*       For FCC testing purposes!
*
*
*
*
*
*
*
*
*
*
*
*/

const analyser = require('./assertion-analyser');
const EventEmitter = require('events').EventEmitter;

const Mocha = require('mocha');
const fs = require('fs');
const path = require('path');

let mocha = new Mocha();
let testDir = './tests';

// Add each .js file to the mocha instance
fs.readdirSync(testDir)
  .filter(function (file) {
    // Only keep the .js files
    return file.substr(-3) === '.js';
  })
  .forEach(function (file) {
    mocha.addFile(path.join(testDir, file));
  });

let emitter = new EventEmitter();
emitter.run = function () {
  let tests = [];
  let context = '';
  let separator = ' -> ';

  // Run the tests
  let runner;
  try {
    runner = mocha.ui('tdd').run();
  } catch (e) {
    console.log('Error while running tests:', e);
    return;
  }

  runner
    .on('test end', function (test) {
      // Remove comments
      let body = test.body.replace(/\/\/.*\n|\/\*.*\*\//g, '');
      // Collapse spaces
      body = body.replace(/\s+/g, ' ');
      let obj = {
        title: test.title,
        context: context.slice(0, -separator.length),
        state: test.state,
        assertions: analyser(body),
      };
      tests.push(obj);
    })
    .on('end', function () {
      emitter.report = tests;
      emitter.emit('done', tests);
    })
    .on('suite', function (s) {
      context += s.title + separator;
    })
    .on('suite end', function (s) {
      context = context.slice(0, -(s.title.length + separator.length));
    });
};

module.exports = emitter;
